Q1.
class Nsynchro
{
	synchronized void disp()
	{
		try
		{
			System.out.println("Come on");
			System.out.println("Student");
			System.out.println("Enjoy");
			Thread.sleep(1000);
		}
		catch(InterruptedException e)
		{
			System.out.println(e);
		}
		System.out.println("book");
		System.out.println("reading");
	}
}
class Test implements Runnable
{
	Thread d;
	Nsynchro ob1;
	public Test(Nsynchro o1)
	{
		ob1=o1;
		d=new Thread(this);
		d.start();
	}
	public void run()
	{
		ob1.disp();
	}
}
class Slip30_1
{
	public static void main(String args[])
	{
		Nsynchro ob2=new Nsynchro();
		Test ob3=new Test(ob2);
		Test ob4=new Test(ob2);
	}
}

Q2.
import java.io.*;
import java.sql.*;
import java.util.*;
class Slip30_2
{
        public static void main(String args[])
        {
        int ch;
        Scanner s=new Scanner(System.in);
        try
        {
        Class.forName("org.postgresql.Driver");
        Connection con=DriverManager.getConnection("jdbc:postgresql://localhost:5432/","postgres","123");
        Statement stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        ResultSet rs=stmt.executeQuery("select * from Teacher1");
        int count=0;
        while(rs.next())
        count++;
        System.out.println("Which record you want");
        System.out.println("Records are="+count);
        do
        {
                System.out.println("1 First\n2 last\n3 next\n4 prev\n0Exit");
                ch=s.nextInt();
                switch(ch)
                {
                case 1:rs.first();
                System.out.println("Teacher Id:"+rs.getInt(1)+"Name:"+rs.getString(2)+"Salary:"+rs.getInt(3));
                break;
                case 2:rs.last();
                System.out.println("Teacher Id:"+rs.getInt(1)+"Name:"+rs.getString(2)+"Salary:"+rs.getInt(3));
                break;
                case 3:rs.next();
                if(rs.isAfterLast())
                System.out.println("can't move forward");
                else
                System.out.println("Teacher Id:"+rs.getInt(1)+"Name:"+rs.getString(2)+"Salary:"+rs.getInt(3));
                break;
                case 4:rs.previous();
                if(rs.isBeforeFirst())
                System.out.println("can't move backward");
                else
                System.out.println("Teacher Id:"+rs.getInt(1)+"Name:"+rs.getString(2)+"Salary:"+rs.getInt(3));
                break;
                case 0:break;
                default:System.out.println("Enter valid operation");
                }
                }while(ch!=0);
                }
        catch(Exception e)
                {
                        System.out.println(e);
                }
                }
                }
